<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.mapper.EmpMapper">

    <sql id="commonSelect">        <!-- sql 标签用于抽取一个 sql语句，并为它设置一个唯一的 id, 可以在其他地方通过 id 引用这个片段 -->
        select id,username,password,name,gender,image,job,entrydate,dept_id,create_time,update_time
        from emp
    </sql>

<!--    UPDATE emp SET username = #{username},name = #{name} 在使用 update 更新语句时， 当只有一个条件满足时，sql语句会多出来一个逗号-->
<!--    所以，在写 update sql语句时，要使用到 set 标签，会去除掉多余的逗号 -->
    <select id="selectInXml" resultType="com.itheima.pojo.Emp">        <!--这里的 id 为 EmpMapper接口 中的方法名-->
        <include refid="commonSelect"/>     <!-- 引用 sql 片段-->
        <where>    <!-- where 标签，当 where 条件中都不成立时，不生成 where 关键字，有一个条件成立时，不拼接 and 关键字 -->
            <if test="id != null">    <!-- 动态 sql, 当 满足条件时才拼接 where 语句 -->
                id > #{id}
            </if>
            <if test="name != null">
                AND name Like concat('%', #{name}, '%')
            </if>
        </where>
    </select>
<!--    批量删除 数据-->
<!--    foreach标签，遍历集合中的元素
        collection: 遍历的集合
        item: 遍历出来的元素
        separator: 分隔符
        open:  遍历开始前拼接的 sql 片段
        close: 遍历借书后拼接的 sql 片段
-->
    <delete id="deleteByIds">
        DELETE FROM emp
        <where>
            id IN <!-- 下面 foreach 中的内容相当于 (1,2,3,4,5,...) -->
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach> ;
        </where>
    </delete>
</mapper>
