①Selector 一般被称为选择器，也可以翻译为多路复用器。它是Java NIO核心组件中的的一个，用于检查一个或者多个NIO Channel的状态是否处于
可读、可写。如此可以实现单线程管理多个channels,也就是可以管理多个网络连接。

②可选择通道（SelectorChannel）
注意：并不是所有的通道都可以被Selector复用，比如FileChannel并不可以被Selector复用，只有继承了SelectorChannel这个抽象类的子类
才可以被Selector复用。

③一个通道可以被注册到多个选择器上，而对于每个选择器而言，相同的通道只能被注册一次，通道和选择器之间的关系，通过注册完成。SelectorChannel
可以被注册到Selector上，在注册的时候，需要指定通道的哪些操作，是Selector感兴趣的。

④Channel注册到Selector
使用Channel.register(Selector sel, int ops)方法，将一个通道注册到一个选择器上，第一个参数，指定通道要注册的选择器，第二个参数，指定
选择器需要进行的通道操作。
可供选择器查询的通道操作，从类型分，可分为以下四类：
    -可读：SelectionKey.OP_READ
    -可写：SelectionKey.OP_WRITE
    -连接：SelectionKey.OP_CONNECT
    -接收：SelectionKey.OP_ACCEPT
如果Selector对多个通道感兴趣，那么就要用 “位或” 操作符实现：
                          比如：int Key = SelectorKey.OP_READ | SelectorKey.OP_WRITE; // Selector对读和写操作感兴趣
